"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=p(n),d=o,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(m,c(c({ref:t},l),{},{components:n})):r.createElement(m,c({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={title:"Fetch testcase data",sidebar_position:1},c=void 0,i={unversionedId:"usage/fetch",id:"usage/fetch",title:"Fetch testcase data",description:"You can fetch testcase data for any problem (fetching the entire contest at once is not supported for now) using the cppt fetch command and competitive companion browser extension. It creates the source file which uses the extension mentioned in the config file (defaults to cpp) and copies your template code into the source file.",source:"@site/docs/usage/fetch.md",sourceDirName:"usage",slug:"/usage/fetch",permalink:"CPPT/docs/usage/fetch",draft:!1,editUrl:"https://github.com/vishalagrawal22/CPPT/tree/main/website/docs/usage/fetch.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Fetch testcase data",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"CPPT/docs/category/usage"},next:{title:"Run task",permalink:"CPPT/docs/usage/run"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"Demo",id:"demo",level:2}],l={toc:p};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can fetch testcase data for any problem (fetching the entire contest at once is ",(0,o.kt)("strong",{parentName:"p"},"not")," supported for now) using the ",(0,o.kt)("inlineCode",{parentName:"p"},"cppt fetch")," command and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jmerle/competitive-companion"},"competitive companion")," browser extension. It creates the source file which uses the extension mentioned in the config file (defaults to cpp) and copies your template code into the source file."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ cppt fetch --help\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"Usage: cppt fetch [OPTIONS]\n\n  Retrieve testcase data from online judge,\n  make the source code file,\n  and copy boiler plate code if specified in config file\n\nOptions:\n  -p, --path DIRECTORY  path to the folder where you want to create the source\n                        code file\n  -f, --force           overwrite existing files of task\n  -h, --help            Show this message and exit.\n")),(0,o.kt)("h2",{id:"demo"},"Demo"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Fetch command demo",src:n(9785).Z,width:"1920",height:"1080"})))}u.isMDXComponent=!0},9785:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/fetch-7e7961c7e8f8c4e932ea5447247dd2b9.gif"}}]);