"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[600],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"Run task",sidebar_position:2},i=void 0,s={unversionedId:"usage/run",id:"usage/run",title:"Run task",description:"You can compile (if applicable) and run your source code using the cppt run command. It uses the command specified in the config file to run your source code. It supports running C++, Java, and Python source files.",source:"@site/docs/usage/run.md",sourceDirName:"usage",slug:"/usage/run",permalink:"/CPPT/docs/usage/run",draft:!1,editUrl:"https://github.com/vishalagrawal22/CPPT/tree/main/website/docs/usage/run.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Run task",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Fetch testcase data",permalink:"/CPPT/docs/usage/fetch"},next:{title:"Testcase commands",permalink:"/CPPT/docs/category/testcase-commands"}},c={},l=[{value:"Usage",id:"usage",level:2},{value:"Demo",id:"demo",level:2}],u={toc:l};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You can compile (if applicable) and run your source code using the ",(0,a.kt)("inlineCode",{parentName:"p"},"cppt run")," command. It uses the command specified in the config file to run your source code. It supports running C++, Java, and Python source files."),(0,a.kt)("p",null,"You can run your source code against:-"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"all testcases"),(0,a.kt)("li",{parentName:"ol"},"specific testcase"),(0,a.kt)("li",{parentName:"ol"},"interactively entered testcase")),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"run")," command supports the following verdicts:-"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Accepted"),(0,a.kt)("li",{parentName:"ol"},"Wrong answer"),(0,a.kt)("li",{parentName:"ol"},"Compilation error"),(0,a.kt)("li",{parentName:"ol"},"Runtime error")),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("strong",{parentName:"p"},"standard error")," (like cerr in c++) to ",(0,a.kt)("strong",{parentName:"p"},"print debugging info"),". It will be displayed separately and will not affect the testcase verdict (only standard output needs to match the intended output to get accepted)."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ cppt run --help\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"Usage: cppt run [OPTIONS] FILENAME\n\n  Compile (if applicable) and run source code on saved testcases\n  using commands specified in the config file\n\n  Args:\n\n  FILENAME of the file to run with file extension\n\nOptions:\n  -p, --path DIRECTORY  path to the folder which contains the souce code\n  -t, --tc INTEGER      run specific testcase (0 for all)  [default: 0]\n  -i, --interactive     run program in interactive mode(stdin, stdout, stderr\n                        are used)\n  -h, --help            Show this message and exit.\n")),(0,a.kt)("h2",{id:"demo"},"Demo"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Run command demo",src:n(2552).Z,width:"1920",height:"1080"})))}p.isMDXComponent=!0},2552:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/run-5f0bab03ba5ca1bf8143c1e8eb9f8351.gif"}}]);